ca65 V2.19 - Git 52e438792
Main file   : hires.asm
Current file: hires.asm

000000r 1               .org $080D
00080D  1               .segment "STARTUP"
00080D  1               .segment "INIT"
00080D  1               .segment "ONCE"
00080D  1               .segment "CODE"
00080D  1               
00080D  1  4C 21 08        jmp start
000810  1               
000810  1               .include "x16.inc"
000810  2               .ifndef X16_INC
000810  2               X16_INC  = 1
000810  2               
000810  2               .ifndef __CX16__
000810  2               __CX16__ = 1
000810  2               .endif
000810  2               
000810  2               ; X16 addresses, values, and macros
000810  2               ; Accurate for ROM release R38
000810  2               
000810  2               SD_DEVICE   = 8 ; also host file system on emulator if no SD image mounted
000810  2               DISK_DEVICE = SD_DEVICE ; change if to be loaded off IEC device
000810  2               
000810  2               
000810  2               ; RAM Addresses
000810  2               
000810  2               ; Kernal Registers
000810  2               r0                = $02
000810  2               r0L               = r0
000810  2               r0H               = r0+1
000810  2               r1                = $04
000810  2               r1L               = r1
000810  2               r1H               = r1+1
000810  2               r2                = $06
000810  2               r2L               = r2
000810  2               r2H               = r2+1
000810  2               r3                = $08
000810  2               r3L               = r3
000810  2               r3H               = r3+1
000810  2               r4                = $0A
000810  2               r4L               = r4
000810  2               r4H               = r4+1
000810  2               r5                = $0C
000810  2               r5L               = r5
000810  2               r5H               = r5+1
000810  2               r6                = $0E
000810  2               r6L               = r6
000810  2               r6H               = r6+1
000810  2               r7                = $10
000810  2               r7L               = r7
000810  2               r7H               = r7+1
000810  2               r8                = $12
000810  2               r8L               = r8
000810  2               r8H               = r8+1
000810  2               r9                = $14
000810  2               r9L               = r9
000810  2               r9H               = r9+1
000810  2               r10               = $16
000810  2               r10L              = r10
000810  2               r10H              = r10+1
000810  2               r11               = $18
000810  2               r11L              = r11
000810  2               r11H              = r11+1
000810  2               r12               = $1A
000810  2               r12L              = r12
000810  2               r12H              = r12+1
000810  2               r13               = $1C
000810  2               r13L              = r13
000810  2               r13H              = r13+1
000810  2               r14               = $1E
000810  2               r14L              = r14
000810  2               r14H              = r14+1
000810  2               r15               = $20
000810  2               r15L              = r15
000810  2               r15H              = r15+1
000810  2               
000810  2               ; Zero-Page userspace
000810  2               ZP_PTR_1          = $7E   ; four pointers for temporary use only
000810  2               ZP_PTR_2          = $22
000810  2               ZP_PTR_3          = $24
000810  2               ZP_PTR_4          = $26
000810  2               
000810  2               ; I/O Registers
000810  2               VERA_addr_low     = $9F20
000810  2               VERA_addr_high    = $9F21
000810  2               VERA_addr_bank    = $9F22
000810  2               VERA_data0        = $9F23
000810  2               VERA_data1        = $9F24
000810  2               VERA_ctrl         = $9F25
000810  2               VERA_ien          = $9F26
000810  2               VERA_isr          = $9F27
000810  2               VERA_irqline_l    = $9F28
000810  2               VERA_dc_video     = $9F29 ; VERA_ctrl(1) (DCSEL) = 0
000810  2               VERA_dc_hscale    = $9F2A ; VERA_ctrl(1) (DCSEL) = 0
000810  2               VERA_dc_vscale    = $9F2B ; VERA_ctrl(1) (DCSEL) = 0
000810  2               VERA_dc_border    = $9F2C ; VERA_ctrl(1) (DCSEL) = 0
000810  2               VERA_dc_hstart    = $9F29 ; VERA_ctrl(1) (DCSEL) = 1
000810  2               VERA_dc_hstop     = $9F2A ; VERA_ctrl(1) (DCSEL) = 1
000810  2               VERA_dc_vstart    = $9F2B ; VERA_ctrl(1) (DCSEL) = 1
000810  2               VERA_dc_vstop     = $9F2C ; VERA_ctrl(1) (DCSEL) = 1
000810  2               VERA_L0_config    = $9F2D
000810  2               VERA_L0_mapbase   = $9F2E
000810  2               VERA_L0_tilebase  = $9F2F
000810  2               VERA_L0_hscroll_l = $9F30
000810  2               VERA_L0_hscroll_h = $9F31
000810  2               VERA_L0_vscroll_l = $9F32
000810  2               VERA_L0_vscroll_h = $9F33
000810  2               VERA_L1_config    = $9F34
000810  2               VERA_L1_mapbase   = $9F35
000810  2               VERA_L1_tilebase  = $9F36
000810  2               VERA_L1_hscroll_l = $9F37
000810  2               VERA_L1_hscroll_h = $9F38
000810  2               VERA_L1_vscroll_l = $9F39
000810  2               VERA_L1_vscroll_h = $9F3A
000810  2               VERA_audio_ctrl   = $9F3B
000810  2               VERA_audio_rate   = $9F3C
000810  2               VERA_audio_data   = $9F3D
000810  2               VERA_spi_data     = $9F3E
000810  2               VERA_spi_ctrl     = $9F3F
000810  2               
000810  2               ROM_BANK          = $9F60
000810  2               RAM_BANK          = $9F61
000810  2               
000810  2               YM_reg            = $9FE0
000810  2               YM_data           = $9FE1
000810  2               
000810  2               ; Emulator Registers
000810  2               GIF_ctrl          = $9FB5
000810  2               
000810  2               ; ROM Banks
000810  2               KERNAL_ROM_BANK   = 0
000810  2               KEYBOARD_ROM_BANK = 1
000810  2               CBDOS_ROM_BANK    = 2
000810  2               GEOS_ROM_BANK     = 3
000810  2               BASIC_ROM_BANK    = 4
000810  2               MONITOR_ROM_BANK  = 5
000810  2               CHARSET_ROM_BANK  = 6
000810  2               
000810  2               ; Banked Addresses
000810  2               RAM_WIN           = $A000
000810  2               RAM_WIN_SIZE      = $2000
000810  2               ROM_WIN           = $C000
000810  2               
000810  2               ; Kernal Subroutines
000810  2               ENTROPY_GET                   := $FECF
000810  2               CONSOLE_set_paging_message    := $FED5
000810  2               CONSOLE_put_image             := $FED8
000810  2               CONSOLE_init                  := $FEDB
000810  2               CONSOLE_put_char              := $FEDE
000810  2               CONSOLE_get_char              := $FEE1
000810  2               MEMORY_FILL                   := $FEE4
000810  2               MEMORY_COPY                   := $FEE7
000810  2               MEMORY_CRC                    := $FEEA
000810  2               MEMORY_DECOMPRESS             := $FEED
000810  2               SPRITE_set_image              := $FEF0
000810  2               SPRITE_set_position           := $FEF3
000810  2               FB_init                       := $FEF6
000810  2               FB_get_info                   := $FEF9
000810  2               FB_set_palette                := $FEFC
000810  2               FB_cursor_position            := $FEFF
000810  2               FB_cursor_next_line           := $FF02
000810  2               FB_get_pixel                  := $FF05
000810  2               FB_get_pixels                 := $FF08
000810  2               FB_set_pixel                  := $FF0B
000810  2               FB_set_pixels                 := $FF0E
000810  2               FB_set_8_pixels               := $FF11
000810  2               FB_set_8_pixels_opaque        := $FF14
000810  2               FB_fill_pixels                := $FF17
000810  2               FB_filter_pixels              := $FF1A
000810  2               FB_move_pixels                := $FF1D
000810  2               GRAPH_init                    := $FF20
000810  2               GRAPH_clear                   := $FF23
000810  2               GRAPH_set_window              := $FF26
000810  2               GRAPH_set_colors              := $FF29
000810  2               GRAPH_draw_line               := $FF2C
000810  2               GRAPH_draw_rect               := $FF2F
000810  2               GRAPH_move_rect               := $FF32
000810  2               GRAPH_draw_oval               := $FF35
000810  2               GRAPH_draw_image              := $FF38
000810  2               GRAPH_set_font                := $FF3B
000810  2               GRAPH_get_char_size           := $FF3E
000810  2               GRAPH_put_char                := $FF41
000810  2               MONITOR                       := $FF44
000810  2               ENTER_BASIC                   := $FF47
000810  2               CLOSE_ALL                     := $FF4A
000810  2               CLOCK_SET_DATE_TIME           := $FF4D
000810  2               CLOCK_GET_DATE_TIME           := $FF50
000810  2               JOYSTICK_SCAN                 := $FF53
000810  2               JOYSTICK_GET                  := $FF56
000810  2               SCREEN_SET_MODE               := $FF5F
000810  2               SCREEN_SET_CHARSET            := $FF62
000810  2               PFKEY                         := $FF65
000810  2               MOUSE_CONFIG                  := $FF68
000810  2               MOUSE_GET                     := $FF6B
000810  2               JSRFAR_kernal_addr            := $FF6E
000810  2               MOUSE_SCAN                    := $FF71
000810  2               FETCH                         := $FF74
000810  2               STASH                         := $FF77
000810  2               CMPARE                        := $FF7A
000810  2               PRIMM                         := $FF7D
000810  2               
000810  2               SCINIT                        := $FF81
000810  2               IOINIT                        := $FF84
000810  2               RAMTAS                        := $FF87
000810  2               RESTOR                        := $FF8A
000810  2               LKUPLA                        := $FF8D
000810  2               SETMSG                        := $FF90
000810  2               SECOND                        := $FF93
000810  2               TKSA                          := $FF96
000810  2               MEMTOP                        := $FF99
000810  2               MEMBOT                        := $FF9C
000810  2               SETTMO                        := $FFA2
000810  2               IECIN                         := $FFA5
000810  2               IECOUT                        := $FFA8
000810  2               UNTALK                        := $FFAB
000810  2               UNLISTEN                      := $FFAE
000810  2               LISTEN                        := $FFB1
000810  2               TALK                          := $FFB4
000810  2               READST                        := $FFB7
000810  2               SETLFS                        := $FFBA
000810  2               SETNAM                        := $FFBD
000810  2               OPEN                          := $FFC0
000810  2               CLOSE                         := $FFC3
000810  2               CHKIN                         := $FFC6
000810  2               CHKOUT                        := $FFC9
000810  2               CLRCHN                        := $FFCC
000810  2               CHRIN                         := $FFCF
000810  2               BASIN                         := CHRIN ; alias
000810  2               CHROUT                        := $FFD2
000810  2               BSOUT                         := CHROUT ; alias
000810  2               LOAD                          := $FFD5
000810  2               SAVE                          := $FFD8
000810  2               SETTIM                        := $FFDB
000810  2               RDTIM                         := $FFDE
000810  2               STOP                          := $FFE1
000810  2               GETIN                         := $FFE4
000810  2               CLALL                         := $FFE7
000810  2               UDTIM                         := $FFEA
000810  2               SCREEN                        := $FFED
000810  2               PLOT                          := $FFF0
000810  2               IOBASE                        := $FFF3
000810  2               
000810  2               ; BASIC Vectors
000810  2               BASIC_PANIC       := $C000
000810  2               BASIC_INIT        := $C003
000810  2               
000810  2               
000810  2               ; VRAM Addresses
000810  2               VRAM_petscii   = $0F800
000810  2               VRAM_psg       = $1F9C0
000810  2               VRAM_palette   = $1FA00
000810  2               VRAM_sprattr   = $1FC00
000810  2               
000810  2               ; RAM Vectors
000810  2               IRQVec         := $0314
000810  2               BRKVec         := $0316
000810  2               NMIVec         := $0318
000810  2               FETVec         := $03AF
000810  2               ;STAVec         := TBD
000810  2               ;CMPVec         := TBD
000810  2               
000810  2               
000810  2               ;   Macros
000810  2               
000810  2               .macro VERA_SET_ADDR addr, stride
000810  2                  .ifnblank stride
000810  2                     .if stride < 0
000810  2                        lda #((^addr) | $08 | ((0-stride) << 4))
000810  2                     .else
000810  2                        lda #((^addr) | (stride << 4))
000810  2                     .endif
000810  2                  .else
000810  2                     lda #(^addr) | $10
000810  2                  .endif
000810  2               
000810  2                  sta VERA_addr_bank
000810  2                  lda #(>addr)
000810  2                  sta VERA_addr_high
000810  2                  lda #(<addr)
000810  2                  sta VERA_addr_low
000810  2               .endmacro
000810  2               
000810  2               .macro JSRFAR far_sr_addr, bank
000810  2               	jsr JSRFAR_kernal_addr
000810  2               	.addr far_sr_addr
000810  2               	.byte bank
000810  2               .endmacro
000810  2               
000810  2               .endif
000810  2               
000810  1               
000810  1               pal_fn:
000810  1  50 41 4C 2E  .byte "pal.bin"
000814  1  42 49 4E     
000817  1               end_pal_fn:
000817  1               PAL_FN_LENGTH = end_pal_fn - pal_fn
000817  1               
000817  1               BITMAP_VRAM = $00000
000817  1               
000817  1               bitmap_fn:
000817  1  42 49 54 4D  .byte "bitmap.bin"
00081B  1  41 50 2E 42  
00081F  1  49 4E        
000821  1               end_bitmap_fn:
000821  1               BITMAP_FN_LENGTH = end_bitmap_fn - bitmap_fn
000821  1               
000821  1               
000821  1               start:
000821  1                  ; configure Display Composer
000821  1  A9 02           lda #$02
000823  1  8D 25 9F        sta VERA_ctrl        ; set DC_SEL to 1
000826  1  A9 14           lda #20
000828  1  8D 2B 9F        sta VERA_dc_vstart   ; set VSTART to 40
00082B  1  A9 DC           lda #220
00082D  1  8D 2C 9F        sta VERA_dc_vstop    ; set VSTOP to 440
000830  1  9C 25 9F        stz VERA_ctrl        ; reset DC_SEL
000833  1               
000833  1                  ; configure VRAM Layer 1
000833  1  A9 06           lda #$06
000835  1  8D 34 9F        sta VERA_L1_config   ; 4bpp bitmap
000838  1  A9 01           lda #((BITMAP_VRAM >> 9) | $01)
00083A  1  8D 36 9F        sta VERA_L1_tilebase ; 640-pixel-wide, starting at BITMAP_VRAM
00083D  1               
00083D  1                  ; load palette
00083D  1  A9 01           lda #1
00083F  1  A2 08           ldx #8
000841  1  A0 00           ldy #0
000843  1  20 BA FF        jsr SETLFS
000846  1  A9 07           lda #PAL_FN_LENGTH
000848  1  A2 10           ldx #<pal_fn
00084A  1  A0 08           ldy #>pal_fn
00084C  1  20 BD FF        jsr SETNAM
00084F  1  A9 03           lda #(2 + ^VRAM_palette)
000851  1  A2 00           ldx #<VRAM_palette
000853  1  A0 FA           ldy #>VRAM_palette
000855  1  20 D5 FF        jsr LOAD
000858  1               
000858  1                  ; load bitmap
000858  1  A9 0A           lda #BITMAP_FN_LENGTH
00085A  1  A2 17           ldx #<bitmap_fn
00085C  1  A0 08           ldy #>bitmap_fn
00085E  1  20 BD FF        jsr SETNAM
000861  1  A9 02           lda #(2 + ^BITMAP_VRAM)
000863  1  A2 00           ldx #<BITMAP_VRAM
000865  1  A0 00           ldy #>BITMAP_VRAM
000867  1  20 D5 FF        jsr LOAD
00086A  1               
00086A  1               loop:
00086A  1  CB              wai
00086B  1  80 FD           bra loop
00086B  1               
